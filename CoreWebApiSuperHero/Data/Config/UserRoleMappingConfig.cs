using CoreWebApiSuperHero.Data;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
namespace CoreWebApiSuperHero.Data.Config
{
    public class UserRoleMappingConfig:IEntityTypeConfiguration<UserRoleMapping>
    {
        public void Configure(EntityTypeBuilder<UserRoleMapping> builder)
        {
            builder.ToTable("UserRoleMappings"); // This specifies the table name for the Student entity in the database

            builder.HasKey(s => s.Id);//primary key is automatically configured by EF Core

            builder.Property(s => s.Id).UseIdentityColumn();// This sets the Id property to be an identity column, meaning it will be automatically generated by the database

            builder.HasIndex(s => new { s.UserId, s.RoleId }).IsUnique(); // This creates a unique index on the combination of UserId and RoleId to prevent duplicate mappings

            builder.Property(s => s.UserId).IsRequired();

            builder.Property(s => s.RoleId).IsRequired();

            builder.HasOne(builder => builder.Role)// This specifies that the UserRoleMapping entity has one related Role entity
                   .WithMany(role => role.UserRoleMappings) // This specifies that the Role entity can have many related UserRoleMapping entities
                   .HasForeignKey(builder => builder.RoleId) // This specifies that the foreign key property in the UserRoleMapping entity is RoleId
                   .HasConstraintName("FK_UserRoleMapping_Roles"); // This sets the name of the foreign key constraint in the database

            builder.HasOne(builder => builder.User)// This specifies that the UserRoleMapping entity has one related User entity
                     .WithMany(user => user.UserRoleMappings) // This specifies that the User entity can have many related UserRoleMapping entities
                     .HasForeignKey(builder => builder.UserId) // This specifies that the foreign key property in the UserRoleMapping entity is UserId
                     .HasConstraintName("FK_UserRoleMapping_Users"); // This sets the name of the foreign key constraint in the database


        }
    }   
}
