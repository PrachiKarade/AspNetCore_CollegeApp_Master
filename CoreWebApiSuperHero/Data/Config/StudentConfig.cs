namespace CoreWebApiSuperHero.Data.Config;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

public class StudentConfig : IEntityTypeConfiguration<Student>
{
    public void Configure(EntityTypeBuilder<Student> builder)
    {
        builder.ToTable("Students"); // This specifies the table name for the Student entity in the database

        builder.HasKey(s => s.Id);//prry key is automatically configured by EF Core
        builder.Property(s => s.Id).UseIdentityColumn();// This sets the Id property to be an identity column, meaning it will be automatically generated by the database

        builder.Property(s => s.StudentName).IsRequired().HasMaxLength(50); // This sets the StudentName property to be required and have a maximum length of 50 characters

        builder.Property(s => s.Email).IsRequired(false).HasMaxLength(250);

        builder.Property(s => s.Address).IsRequired(false).HasMaxLength(500);

        builder.HasData(new List<Student>()
            {
                new Student
                {
                    Id = 1,
                    StudentName = "Prachi",
                    Email = "prachi.karade@gmail.com",
                    Address = "India",
                    DOB = new DateTime(1982, 06, 12)
                },
                new Student
                {
                    Id = 2,
                    StudentName = "Sarvada",
                    Email = "sarvada.jothangiya@gmail.com",
                    Address = "India",
                    DOB = new DateTime(2014, 07,15)
                }
            });

        /*builder.HasOne(s => s.Department) // Each Student has one Department
               .WithMany(s => s.Students) // Each Department can have many Students
               .HasForeignKey(s => s.DepartmentId) // The foreign key in the Student entity is DepartmentId
               .HasConstraintName("FK_Student_Department") // Name of the foreign key constraint
               .OnDelete(DeleteBehavior.SetNull); // When a Department is deleted, set the DepartmentId in Student to null
        */
       
    }
}

