using CoreWebApiSuperHero.Data;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
namespace CoreWebApiSuperHero.Data.Config
{
    public class RolePrivilegeConfig:IEntityTypeConfiguration<RolePrivilege>
    {
        public void Configure(EntityTypeBuilder<RolePrivilege> builder)
        {
            builder.ToTable("RolePrivileges"); // This specifies the table name for the Student entity in the database

            builder.HasKey(s => s.RolePrivilegeId);//prry key is automatically configured by EF Core
            builder.Property(s => s.RolePrivilegeId).UseIdentityColumn();// This sets the Id property to be an identity column, meaning it will be automatically generated by the database

            builder.Property(s => s.RolePrivilegeName).IsRequired().HasMaxLength(250); // This sets the StudentName property to be required and have a maximum length of 50 characters

            builder.Property(s => s.Description).IsRequired(false);

            builder.Property(s => s.IsDeleated).IsRequired();

            builder.Property(s => s.IsActive).IsRequired();

            builder.Property(s => s.Createdate).IsRequired();

            builder.Property(s => s.Updatedate).IsRequired();

            builder.Property(s => s.RoleId).IsRequired();

            builder.HasOne(s => s.Role) // This specifies that the RolePrivilege entity has one related Role entity
                   .WithMany(d => d.RolePrivileges) // This specifies that the Role entity can have many related RolePrivilege entities
                   .HasForeignKey(s => s.RoleId) // This specifies that the foreign key property in the RolePrivilege entity is RoleId
                   .HasConstraintName("FK_RolePrivilege_Roles"); // This sets the name of the foreign key constraint in the database
        }
    }
}
